{"remainingRequest":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/babel-loader/lib/index.js!/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid_test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid_test.vue","mtime":1621412447692},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvbWluaGR1b25nL1dvcmtQbGFjZS92dWUvdnVlX2dyaWYvZ3JpZF9sYXlvdXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiZ3JpZF90ZXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBkcmFnZ2FibGU6IGRyYWdnYWJsZQogIH0sCiAgcHJvcHM6IHsKICAgIGxheW91dDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY2VsbHM6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgdmFyIGNlbGxzID0gW107CiAgICAgICAgdGhpcy5sYXlvdXQucm93cy5mb3JFYWNoKGZ1bmN0aW9uIChncmlkLCByb3cpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLmxheW91dC53aWQpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKCiAgICAgICAgICBjZWxscy5wdXNoLmFwcGx5KGNlbGxzLCBfdG9Db25zdW1hYmxlQXJyYXkoQXJyYXkuZnJvbSh7CiAgICAgICAgICAgIGxlbmd0aDogZ3JpZAogICAgICAgICAgfSwgZnVuY3Rpb24gKHYsIGkpIHsKICAgICAgICAgICAgcmV0dXJuIHYgPSB7CiAgICAgICAgICAgICAgcm93OiByb3cgKyAxLAogICAgICAgICAgICAgIGNvbHVtbjogMSArIDEyIC8gZ3JpZCAqIGksCiAgICAgICAgICAgICAgc3BhbmNvbDogMTIgLyBncmlkLAogICAgICAgICAgICAgIHNwYW5yb3c6IDEsCiAgICAgICAgICAgICAgd2lkOiBfdGhpcy5nZXRXaWQoaSwgcm93KQogICAgICAgICAgICB9OwogICAgICAgICAgfSkpKTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gY2VsbHM7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld3ZhbHVlKSB7CiAgICAgICAgdmFyIGMgPSBBcnJheS5mcm9tKHsKICAgICAgICAgIGxlbmd0aDogbmV3dmFsdWUubGVuZ3RoCiAgICAgICAgfSwgZnVuY3Rpb24gKHYsIGkpIHsKICAgICAgICAgIHJldHVybiAodiA9IG5ld3ZhbHVlW2ldKS53aWQ7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIG5ld1ZhbHVlID0gdGhpcy5sYXlvdXQ7CiAgICAgICAgbmV3VmFsdWUud2lkID0gYzsKICAgICAgICB0aGlzLnVwZGF0ZUxheW91dChuZXdWYWx1ZSk7CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN0eWxlOiBmdW5jdGlvbiBzdHlsZShjZWxsKSB7CiAgICAgIHZhciBfcmVmOwoKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgICAgIHZhciBhID0gW3sKICAgICAgICAnZ3JpZC1hcmVhJzogKF9yZWYgPSAnJykuY29uY2F0LmFwcGx5KF9yZWYsIFtjZWxsLnJvdywgJy8nLCBjZWxsLmNvbHVtbiwgJy8nLCAnc3BhbiAnICsgY2VsbC5zcGFucm93LCAnLycsICdzcGFuICcgKyBjZWxsLnNwYW5jb2xdKS5yZXBsYWNlQWxsKCcsJywgJycpCiAgICAgIH1dOwogICAgICByZXR1cm4gYTsKICAgIH0sCiAgICBnZXRXaWQ6IGZ1bmN0aW9uIGdldFdpZChjb2wsIHJvdykgewogICAgICB2YXIgd2lkID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcm93OyBpKyspIHsKICAgICAgICB3aWQgKz0gdGhpcy5sYXlvdXQucm93c1tpXTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LndpZFt3aWQgKyBjb2xdOwogICAgfSwKICAgIHVwZGF0ZUxheW91dDogZnVuY3Rpb24gdXBkYXRlTGF5b3V0KG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpsYXlvdXQnLCBuZXdWYWx1ZSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["grid_test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAcA,OAAA,SAAA,MAAA,cAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,GAAA,EAAA,eAAA;AAAA;;AACA,YAAA,KAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,EADA,CAEA;;AACA,UAAA,KAAA,CAAA,IAAA,OAAA,KAAA,qBAAA,KAAA,CAAA,IAAA,CAAA;AAAA,YAAA,MAAA,EAAA;AAAA,WAAA,EAAA,UAAA,CAAA,EAAA,CAAA;AAAA,mBAAA,CAAA,GAAA;AACA,cAAA,GAAA,EAAA,GAAA,GAAA,CADA;AAEA,cAAA,MAAA,EAAA,IAAA,KAAA,IAAA,GAAA,CAFA;AAGA,cAAA,OAAA,EAAA,KAAA,IAHA;AAIA,cAAA,OAAA,EAAA,CAJA;AAKA,cAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,GAAA;AALA,aAAA;AAAA,WAAA,CAAA,EAAA;AAOA,SAVA;AAWA,eAAA,KAAA;AACA,OAfA;AAgBA,MAAA,GAAA,EAAA,aAAA,QAAA,EAAA;AACA,YAAA,CAAA,GAAA,KAAA,CAAA,IAAA,CAAA;AAAA,UAAA,MAAA,EAAA,QAAA,CAAA;AAAA,SAAA,EAAA,UAAA,CAAA,EAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,GAAA,QAAA,CAAA,CAAA,CAAA,EAAA,GAAA;AAAA,SAAA,CAAA;AACA,YAAA,QAAA,GAAA,KAAA,MAAA;AACA,QAAA,QAAA,CAAA,GAAA,GAAA,CAAA;AACA,aAAA,YAAA,CAAA,QAAA;AACA;AArBA;AADA,GAXA;AAoCA,EAAA,IApCA,kBAoCA;AACA,WAAA;AACA,MAAA,CAAA,EAAA;AADA,KAAA;AAGA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,iBACA,IADA,EACA;AAAA;;AACA;AACA,UAAA,CAAA,GAAA,CAAA;AAAA,qBAAA,YAAA,MAAA,aAAA,CAAA,IAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,CAAA,MAAA,EAAA,GAAA,EAAA,UAAA,IAAA,CAAA,OAAA,EAAA,GAAA,EAAA,UAAA,IAAA,CAAA,OAAA,CAAA,EAAA,UAAA,CAAA,GAAA,EAAA,EAAA;AAAA,OAAA,CAAA;AACA,aAAA,CAAA;AACA,KALA;AAMA,IAAA,MANA,kBAMA,GANA,EAMA,GANA,EAMA;AACA,UAAA,GAAA,GAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,GAAA,IAAA,KAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA;;AACA,aAAA,KAAA,MAAA,CAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA;AACA,KAZA;AAaA,IAAA,YAbA,wBAaA,QAbA,EAaA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,QAAA;AACA;AAfA;AAzCA,CAAA","sourcesContent":["<template>\n  <div>\n\n        <draggable v-model=\"cells\">\n          <transition-group tag=\"div\" class=\"grid-container\" name=\"grid\">\n            <div class=\"grid-item\" v-for=\"(cell,i) in cells\" :key=\"i\" :style=\"style(cell)\">\n              <slot :name=i>{{ cell.wid }}</slot>\n            </div>\n          </transition-group>\n        </draggable>\n\n  </div>\n</template>\n<script>\nimport draggable from 'vuedraggable'\n\n\nexport default {\n  name: \"grid_test\",\n  components: {\n    draggable,\n  },\n  props: {\n    layout: {\n      type: Object,\n      required: true\n    },\n  },\n  computed: {\n    cells: {\n      get: function () {\n        let cells = []\n        this.layout.rows.forEach((grid, row) => {\n          console.log(this.layout.wid)\n          // eslint-disable-next-line no-unused-vars\n          cells.push(...Array.from({length: grid}, (v, i) => (v = {\n            row: row + 1,\n            column: 1 + ((12 / grid) * i),\n            spancol: (12 / grid),\n            spanrow: 1,\n            wid: this.getWid(i, row)\n          })))\n        })\n        return cells\n      },\n      set: function (newvalue) {\n        const c = Array.from({length: newvalue.length}, (v, i) => (v = newvalue[i]).wid)\n        let newValue = this.layout\n        newValue.wid = c\n        this.updateLayout(newValue)\n      }\n    }\n  },\n  data() {\n    return {\n      a: [],\n    }\n  },\n  methods: {\n    style(cell) {\n// eslint-disable-next-line no-unused-vars\n      let a = [{'grid-area': ''.concat(...[cell.row, '/', cell.column, '/', 'span ' + cell.spanrow, '/', 'span ' + cell.spancol]).replaceAll(',', '')}]\n      return a\n    },\n    getWid(col, row) {\n      let wid = 0\n      for (let i = 0; i < row; i++) {\n        wid += this.layout.rows[i]\n      }\n      return this.layout.wid[wid + col]\n    },\n    updateLayout(newValue) {\n      this.$emit('update:layout', newValue)\n    }\n  },\n}\n</script>\n\n<style scoped>\n.grid-container {\n  display: grid;\n  background: whitesmoke;\n  padding: 10px;\n  grid-column-gap: 50px;\n  grid-template-columns:  auto auto auto auto auto auto auto auto auto auto auto auto;\n  grid-column-gap: 50px;\n  grid-row-gap: 50px;\n}\n\n.grid-item {\n  border: 1px dashed rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  font-size: 30px;\n  text-align: center;\n}\n</style>\n"],"sourceRoot":"src/components"}]}