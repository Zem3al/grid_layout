{"remainingRequest":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid_test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid_test.vue","mtime":1621239204117},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJncmlkX3Rlc3QiLAogIGNvbXBvbmVudHM6IHsKICAgIGRyYWdnYWJsZSwKICB9LAogIHByb3BzOiB7CiAgICBsYXlvdXQ6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjZWxscyA6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgbGV0IGNlbGxzID0gW10KICAgICAgICB0aGlzLmxheW91dC5yb3dzLmZvckVhY2goKGdyaWQscm93KSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxheW91dC53aWQpCiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKICAgICAgICAgIGNlbGxzLnB1c2goLi4uQXJyYXkuZnJvbSh7bGVuZ3RoOiBncmlkfSwgKHYsaSkgPT4gKHYgPSB7cm93OnJvdyArMSxjb2x1bW46MSsoKDEyL2dyaWQpKmkpICwgc3BhbmNvbDogKDEyL2dyaWQpLHNwYW5yb3c6IDEsIHdpZDogdGhpcy5nZXRXaWQoaSxyb3cpfSkpKQogICAgICAgIH0pCiAgICAgICByZXR1cm4gY2VsbHMKICAgICAgfSwKICAgICAgc2V0IDpmdW5jdGlvbiAobmV3dmFsdWUpIHsKICAgICAgICAgY29uc3QgYyA9IEFycmF5LmZyb20oe2xlbmd0aDogbmV3dmFsdWUubGVuZ3RofSwgKHYsaSkgPT4gKHYgPSBuZXd2YWx1ZVtpXSkud2lkKQogICAgICAgIGxldCBuZXdWYWx1ZSA9IHRoaXMubGF5b3V0CiAgICAgICAgbmV3VmFsdWUud2lkID0gYwogICAgICAgIHRoaXMudXBkYXRlTGF5b3V0KG5ld1ZhbHVlKQogICAgICB9CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYTogW10sCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdHlsZShjZWxsKSB7Ci8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycwogICAgICBsZXQgYSA9IFt7J2dyaWQtYXJlYSc6ICcnLmNvbmNhdCguLi5bY2VsbC5yb3cgLCcvJywgY2VsbC5jb2x1bW4sJy8nLCAnc3BhbiAnICsgY2VsbC5zcGFucm93LCcvJywgJ3NwYW4gJysgY2VsbC5zcGFuY29sXSkucmVwbGFjZUFsbCgnLCcsJycpfV0KICAgICAgcmV0dXJuIGEKICAgIH0sCiAgICBnZXRXaWQoY29sLHJvdykgewogICAgICBsZXQgd2lkID0gMAogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvdzsgaSsrICkgewogICAgICAgIHdpZCArPSB0aGlzLmxheW91dC5yb3dzW2ldCiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LndpZFt3aWQgKyBjb2xdCiAgICB9LAogICAgdXBkYXRlTGF5b3V0KG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpsYXlvdXQnLCBuZXdWYWx1ZSkKICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["grid_test.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"grid_test.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n      <draggable v-model=\"cells\" >\n        <transition-group tag=\"div\" class=\"grid-container\" name=\"grid\">\n      <div class=\"grid-item\" v-for=\"(cell,i) in cells\" :key=\"i\" :style=\"style(cell)\">\n          <slot :name=i>{{cell.wid}}</slot>\n      </div>\n        </transition-group>\n      </draggable>\n    </div>\n</template>\n<script>\nimport draggable from 'vuedraggable'\n\nexport default {\n  name: \"grid_test\",\n  components: {\n    draggable,\n  },\n  props: {\n    layout: {\n      type: Object,\n      required: true\n    },\n  },\n  computed: {\n    cells : {\n      get: function () {\n        let cells = []\n        this.layout.rows.forEach((grid,row) => {\n          console.log(this.layout.wid)\n          // eslint-disable-next-line no-unused-vars\n          cells.push(...Array.from({length: grid}, (v,i) => (v = {row:row +1,column:1+((12/grid)*i) , spancol: (12/grid),spanrow: 1, wid: this.getWid(i,row)})))\n        })\n       return cells\n      },\n      set :function (newvalue) {\n         const c = Array.from({length: newvalue.length}, (v,i) => (v = newvalue[i]).wid)\n        let newValue = this.layout\n        newValue.wid = c\n        this.updateLayout(newValue)\n      }\n    }\n  },\n  data() {\n    return {\n      a: [],\n    }\n  },\n  methods: {\n    style(cell) {\n// eslint-disable-next-line no-unused-vars\n      let a = [{'grid-area': ''.concat(...[cell.row ,'/', cell.column,'/', 'span ' + cell.spanrow,'/', 'span '+ cell.spancol]).replaceAll(',','')}]\n      return a\n    },\n    getWid(col,row) {\n      let wid = 0\n      for (let i = 0; i < row; i++ ) {\n        wid += this.layout.rows[i]\n      }\n      return this.layout.wid[wid + col]\n    },\n    updateLayout(newValue) {\n      this.$emit('update:layout', newValue)\n    }\n  },\n}\n</script>\n\n<style scoped>\n.grid-container {\n  display: grid;\n  background: whitesmoke;\n  padding: 10px;\n  grid-column-gap: 50px;\n  grid-template-columns:  auto auto auto auto auto auto auto auto auto auto auto auto;\n}\n\n.grid-item {\n  border: 1px dashed rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  font-size: 30px;\n  text-align: center;\n}\n</style>\n"]}]}