{"remainingRequest":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid_test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid_test.vue","mtime":1621412447692},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJwoKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiZ3JpZF90ZXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBkcmFnZ2FibGUsCiAgfSwKICBwcm9wczogewogICAgbGF5b3V0OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgY2VsbHM6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgbGV0IGNlbGxzID0gW10KICAgICAgICB0aGlzLmxheW91dC5yb3dzLmZvckVhY2goKGdyaWQsIHJvdykgPT4gewogICAgICAgICAgY29uc29sZS5sb2codGhpcy5sYXlvdXQud2lkKQogICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgICAgICAgICBjZWxscy5wdXNoKC4uLkFycmF5LmZyb20oe2xlbmd0aDogZ3JpZH0sICh2LCBpKSA9PiAodiA9IHsKICAgICAgICAgICAgcm93OiByb3cgKyAxLAogICAgICAgICAgICBjb2x1bW46IDEgKyAoKDEyIC8gZ3JpZCkgKiBpKSwKICAgICAgICAgICAgc3BhbmNvbDogKDEyIC8gZ3JpZCksCiAgICAgICAgICAgIHNwYW5yb3c6IDEsCiAgICAgICAgICAgIHdpZDogdGhpcy5nZXRXaWQoaSwgcm93KQogICAgICAgICAgfSkpKQogICAgICAgIH0pCiAgICAgICAgcmV0dXJuIGNlbGxzCiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gKG5ld3ZhbHVlKSB7CiAgICAgICAgY29uc3QgYyA9IEFycmF5LmZyb20oe2xlbmd0aDogbmV3dmFsdWUubGVuZ3RofSwgKHYsIGkpID0+ICh2ID0gbmV3dmFsdWVbaV0pLndpZCkKICAgICAgICBsZXQgbmV3VmFsdWUgPSB0aGlzLmxheW91dAogICAgICAgIG5ld1ZhbHVlLndpZCA9IGMKICAgICAgICB0aGlzLnVwZGF0ZUxheW91dChuZXdWYWx1ZSkKICAgICAgfQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGE6IFtdLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc3R5bGUoY2VsbCkgewovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKICAgICAgbGV0IGEgPSBbeydncmlkLWFyZWEnOiAnJy5jb25jYXQoLi4uW2NlbGwucm93LCAnLycsIGNlbGwuY29sdW1uLCAnLycsICdzcGFuICcgKyBjZWxsLnNwYW5yb3csICcvJywgJ3NwYW4gJyArIGNlbGwuc3BhbmNvbF0pLnJlcGxhY2VBbGwoJywnLCAnJyl9XQogICAgICByZXR1cm4gYQogICAgfSwKICAgIGdldFdpZChjb2wsIHJvdykgewogICAgICBsZXQgd2lkID0gMAogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvdzsgaSsrKSB7CiAgICAgICAgd2lkICs9IHRoaXMubGF5b3V0LnJvd3NbaV0KICAgICAgfQogICAgICByZXR1cm4gdGhpcy5sYXlvdXQud2lkW3dpZCArIGNvbF0KICAgIH0sCiAgICB1cGRhdGVMYXlvdXQobmV3VmFsdWUpIHsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmxheW91dCcsIG5ld1ZhbHVlKQogICAgfQogIH0sCn0K"},{"version":3,"sources":["grid_test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"grid_test.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n\n        <draggable v-model=\"cells\">\n          <transition-group tag=\"div\" class=\"grid-container\" name=\"grid\">\n            <div class=\"grid-item\" v-for=\"(cell,i) in cells\" :key=\"i\" :style=\"style(cell)\">\n              <slot :name=i>{{ cell.wid }}</slot>\n            </div>\n          </transition-group>\n        </draggable>\n\n  </div>\n</template>\n<script>\nimport draggable from 'vuedraggable'\n\n\nexport default {\n  name: \"grid_test\",\n  components: {\n    draggable,\n  },\n  props: {\n    layout: {\n      type: Object,\n      required: true\n    },\n  },\n  computed: {\n    cells: {\n      get: function () {\n        let cells = []\n        this.layout.rows.forEach((grid, row) => {\n          console.log(this.layout.wid)\n          // eslint-disable-next-line no-unused-vars\n          cells.push(...Array.from({length: grid}, (v, i) => (v = {\n            row: row + 1,\n            column: 1 + ((12 / grid) * i),\n            spancol: (12 / grid),\n            spanrow: 1,\n            wid: this.getWid(i, row)\n          })))\n        })\n        return cells\n      },\n      set: function (newvalue) {\n        const c = Array.from({length: newvalue.length}, (v, i) => (v = newvalue[i]).wid)\n        let newValue = this.layout\n        newValue.wid = c\n        this.updateLayout(newValue)\n      }\n    }\n  },\n  data() {\n    return {\n      a: [],\n    }\n  },\n  methods: {\n    style(cell) {\n// eslint-disable-next-line no-unused-vars\n      let a = [{'grid-area': ''.concat(...[cell.row, '/', cell.column, '/', 'span ' + cell.spanrow, '/', 'span ' + cell.spancol]).replaceAll(',', '')}]\n      return a\n    },\n    getWid(col, row) {\n      let wid = 0\n      for (let i = 0; i < row; i++) {\n        wid += this.layout.rows[i]\n      }\n      return this.layout.wid[wid + col]\n    },\n    updateLayout(newValue) {\n      this.$emit('update:layout', newValue)\n    }\n  },\n}\n</script>\n\n<style scoped>\n.grid-container {\n  display: grid;\n  background: whitesmoke;\n  padding: 10px;\n  grid-column-gap: 50px;\n  grid-template-columns:  auto auto auto auto auto auto auto auto auto auto auto auto;\n  grid-column-gap: 50px;\n  grid-row-gap: 50px;\n}\n\n.grid-item {\n  border: 1px dashed rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  font-size: 30px;\n  text-align: center;\n}\n</style>\n"]}]}