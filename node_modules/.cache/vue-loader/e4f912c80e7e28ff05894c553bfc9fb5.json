{"remainingRequest":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/src/components/grid.vue","mtime":1620892871721},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/minhduong/WorkPlace/vue/vue_grif/grid_layout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJncmlkIiwNCiAgY29tcG9uZW50czogew0KICAgIGRyYWdnYWJsZSwNCiAgfSwNCiAgcHJvcHM6IHsNCiAgICBncmlkczogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0sDQogICAgc2xvdHM6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgYSA6IFtdLA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHN0eWxlKGdyaWQpIHsNCiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzDQogICAgICAgcmV0dXJuIFt7ICdncmlkLXRlbXBsYXRlLWNvbHVtbnMnIDogQXJyYXkuZnJvbSh7bGVuZ3RoOiBncmlkLmNvbH0sICAoXyxpKSA9PiAoaSA9ICdhdXRvICcpKS50b1N0cmluZygpLnJlcGxhY2VBbGwoJywnLCcnKX0seydncmlkLWF1dG8tcm93cyc6IGdyaWQuc2l6ZS50b1N0cmluZygpLmNvbmNhdCgncHgnKX1dDQogICAgfSwNCiAgfSwNCn0NCg=="},{"version":3,"sources":["grid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"grid.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <draggable v-model=\"grids\">\r\n    <div class=\"grid-container\" :style=\"style(grid)\"  v-for=\"(grid,i) in grids\"  :key=\"'container ' + i\" >\r\n      <draggable :list=\"grid\">\r\n      <div class=\"grid-item\"  v-for=\"col in grid.col\" :key=\"'container '+ i + 'col ' + col\">\r\n          <slot name=\"a\"></slot>\r\n      </div>\r\n        </draggable>\r\n    </div>\r\n    </draggable>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport draggable from 'vuedraggable'\r\n\r\nexport default {\r\n  name: \"grid\",\r\n  components: {\r\n    draggable,\r\n  },\r\n  props: {\r\n    grids: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    slots: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n     a : [],\r\n    }\r\n  },\r\n  methods: {\r\n    style(grid) {\r\n        // eslint-disable-next-line no-unused-vars\r\n       return [{ 'grid-template-columns' : Array.from({length: grid.col},  (_,i) => (i = 'auto ')).toString().replaceAll(',','')},{'grid-auto-rows': grid.size.toString().concat('px')}]\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.grid-container {\r\n  display: grid;\r\n  background: whitesmoke;\r\n  padding: 10px;\r\n  grid-column-gap: 50px;\r\n\r\n}\r\n\r\n.grid-item {\r\n  border: 1px dashed rgba(0, 0, 0, 0.8);\r\n  padding: 20px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]}]}